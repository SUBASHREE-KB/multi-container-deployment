name: Build and Push ARM64 to ACR

on:
  push:
    branches: [ main ]

env:
  REGISTRY: multicontainerappreg.azurecr.io

jobs:
  build-backend:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: backend
      IMAGE_TAG: v1

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Log in to Azure using service principal
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to Azure Container Registry
      run: az acr login --name multicontainerappreg

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push backend ARM64 image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile.backend
        push: true
        platforms: linux/arm64
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  build-frontend:
    runs-on: ubuntu-latest
    needs: build-backend
    env:
      IMAGE_NAME: frontend
      IMAGE_TAG: v1

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Log in to Azure using service principal
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to Azure Container Registry
      run: az acr login --name multicontainerappreg

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push frontend ARM64 image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile.frontend
        push: true
        platforms: linux/arm64
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
